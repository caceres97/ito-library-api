// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id   String    @id @default(auto()) @map("_id") @db.ObjectId
  role UserRoles @default(value: STUDENT)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  Rental    Rental[]
}

model Genre {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  Book      Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Author {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  Book      Book[]
}

model Book {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  publicationYear Int

  genre   Genre  @relation(fields: [genreId], references: [id])
  genreId String @db.ObjectId

  author   Author @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  BookCopy BookCopy[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model BookCopy {
  id      String     @id @default(auto()) @map("_id") @db.ObjectId
  stattus BookStatus @default(value: ACTIVE)

  book   Book   @relation(fields: [bookId], references: [id])
  bookId String @map("book_id") @db.ObjectId

  Rental Rental[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Rental {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  expireAt DateTime

  bookCopy   BookCopy @relation(fields: [bookCopyId], references: [id])
  bookCopyId String   @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

enum BookStatus {
  RENTED
  ACTIVE
  INACTIVE
}

enum UserRoles {
  LIBRARIAN
  STUDENT
}
